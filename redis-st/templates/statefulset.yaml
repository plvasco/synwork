apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis-st.fullname" . }}
  labels:
    {{- include "redis-st.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: redis
  selector:
    matchLabels:
      {{- include "redis-st.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "redis-st.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: redis
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 6379
        env:
        {{- if .Values.auth.enabled }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: redis-password
        {{- end }}
        command:
        - "redis-server"
        - "/etc/redis/redis.conf"
        {{- if .Values.auth.enabled }}
        - "--requirepass"
        - "$(REDIS_PASSWORD)"
        {{- end }}
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
      {{- if not .Values.persistence.enabled }}
      - name: redis-data
        emptyDir: {}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes:
        - {{ .Values.persistence.accessModes | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
  {{- end }}